2024-01-22T01:54:31.2726792Z (dda,BL9_100monres)=>
2024-01-22T01:54:31.2727814Z (dda,BL9_100monres)=>01:54:11.972 INFO : Randomness seeded to: 1705888451
2024-01-22T01:54:31.2729507Z (dda,BL9_100monres)=>01:54:11.973 WARNING : opendir [lang/mo/] failed with "No such file or directory".
2024-01-22T01:54:31.2731258Z (dda,BL9_100monres)=>01:54:11.975 INFO : SDL render devices: software, opengl, opengles2
2024-01-22T01:54:31.2732660Z (dda,BL9_100monres)=>01:54:11.975 INFO : [options] C locale set to C
2024-01-22T01:54:31.2733650Z (dda,BL9_100monres)=>01:54:11.975 INFO : [options] C++ locale set to C
2024-01-22T01:54:31.2734759Z (dda,BL9_100monres)=>01:54:12.010 ERROR : (error message will follow backtrace)
2024-01-22T01:54:31.2736095Z (dda,BL9_100monres)=>    ./tests/cata_test(debug_write_backtrace(std::ostream&)+0x25) [0x1f01968]
2024-01-22T01:54:31.2737545Z (dda,BL9_100monres)=>    ./tests/cata_test(DebugLog(DebugLevel, DebugClass)+0x1cc) [0x1f00e78]
2024-01-22T01:54:31.2740706Z (dda,BL9_100monres)=>    ./tests/cata_test(realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x9f) [0x1f00784]
2024-01-22T01:54:31.2742902Z (dda,BL9_100monres)=>    ./tests/cata_test(worldfactory::load_last_world_info()+0x244) [0x2c48800]
2024-01-22T01:54:31.2744230Z (dda,BL9_100monres)=>    ./tests/cata_test(worldfactory::init()+0x19) [0x2c47f85]
2024-01-22T01:54:31.2745745Z (dda,BL9_100monres)=>    ./tests/cata_test(CataListener::testRunStarting(Catch::TestRunInfo const&)+0x211) [0x1ae190f]
2024-01-22T01:54:31.2747624Z (dda,BL9_100monres)=>    ./tests/cata_test(Catch::ListeningReporter::testRunStarting(Catch::TestRunInfo const&)+0x27) [0x1ac0699]
2024-01-22T01:54:31.2750381Z (dda,BL9_100monres)=>    ./tests/cata_test(Catch::RunContext::RunContext(std::shared_ptr<Catch::IConfig const> const&, std::unique_ptr<Catch::IStreamingReporter, std::default_delete<Catch::IStreamingReporter> >&&)+0x204) [0x1aafc60]
2024-01-22T01:54:31.2752747Z (dda,BL9_100monres)=>    ./tests/cata_test(Catch::Session::runInternal()+0x47f) [0x1ab3a1b]
2024-01-22T01:54:31.2754022Z (dda,BL9_100monres)=>    ./tests/cata_test(Catch::Session::run()+0x62) [0x1ab3538]
2024-01-22T01:54:31.2755110Z (dda,BL9_100monres)=>    ./tests/cata_test(main+0x11e8) [0x1ac3f95]
2024-01-22T01:54:31.2756526Z (dda,BL9_100monres)=>    /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7fed18029d90]
2024-01-22T01:54:31.2758003Z (dda,BL9_100monres)=>    /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0x80) [0x7fed18029e40]
2024-01-22T01:54:31.2759221Z (dda,BL9_100monres)=>    ./tests/cata_test(_start+0x25) [0x1487ea5]
2024-01-22T01:54:31.2759957Z (dda,BL9_100monres)=>
2024-01-22T01:54:31.2760866Z (dda,BL9_100monres)=>    Attempting to repeat stack trace using debug symbols…
2024-01-22T01:54:31.2761963Z (dda,BL9_100monres)=>    debug_write_backtrace(std::ostream&)
2024-01-22T01:54:31.2762940Z (dda,BL9_100monres)=>    …/src/debug.cpp:1226
2024-01-22T01:54:31.2763756Z (dda,BL9_100monres)=>    DebugLog(DebugLevel, DebugClass)
2024-01-22T01:54:31.2764728Z (dda,BL9_100monres)=>    …/src/debug.cpp:1453
2024-01-22T01:54:31.2766337Z (dda,BL9_100monres)=>    realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2024-01-22T01:54:31.2767984Z (dda,BL9_100monres)=>    …/src/debug.cpp:514
2024-01-22T01:54:31.2768834Z (dda,BL9_100monres)=>    worldfactory::load_last_world_info()
2024-01-22T01:54:31.2769849Z (dda,BL9_100monres)=>    …/src/worldfactory.cpp:736
2024-01-22T01:54:31.2770630Z (dda,BL9_100monres)=>    worldfactory::init()
2024-01-22T01:54:31.2771514Z (dda,BL9_100monres)=>    …/src/worldfactory.cpp:340
2024-01-22T01:54:31.2772553Z (dda,BL9_100monres)=>    CataListener::testRunStarting(Catch::TestRunInfo const&)
2024-01-22T01:54:31.2774054Z (dda,BL9_100monres)=>    /home/runner/work/dda-mod-ci/dda-mod-ci/tests/../tests/test_main.cpp:137
2024-01-22T01:54:31.2775420Z (dda,BL9_100monres)=>    testRunStarting
2024-01-22T01:54:31.2776735Z (dda,BL9_100monres)=>    /home/runner/work/dda-mod-ci/dda-mod-ci/tests/../tests/test_main.cpp:206
2024-01-22T01:54:31.2778193Z (dda,BL9_100monres)=>    Catch::ListeningReporter::testRunStarting(Catch::TestRunInfo const&)
2024-01-22T01:54:31.2780146Z (dda,BL9_100monres)=>    /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1111
2024-01-22T01:54:31.2781325Z (dda,BL9_100monres)=>    testRunStarting
2024-01-22T01:54:31.2782549Z (dda,BL9_100monres)=>    /home/runner/work/dda-mod-ci/dda-mod-ci/tests/./catch/catch.hpp:17125
2024-01-22T01:54:31.2784740Z (dda,BL9_100monres)=>    Catch::RunContext::RunContext(std::shared_ptr<Catch::IConfig const> const&, std::unique_ptr<Catch::IStreamingReporter, std::default_delete<Catch::IStreamingReporter> >&&)
2024-01-22T01:54:31.2787013Z (dda,BL9_100monres)=>    /home/runner/work/dda-mod-ci/dda-mod-ci/tests/./catch/catch.hpp:12699
2024-01-22T01:54:31.2788170Z (dda,BL9_100monres)=>    Catch::Session::runInternal()
2024-01-22T01:54:31.2789840Z (dda,BL9_100monres)=>    /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/unique_ptr.h:403
2024-01-22T01:54:31.2790876Z (dda,BL9_100monres)=>    TestGroup
2024-01-22T01:54:31.2791961Z (dda,BL9_100monres)=>    /home/runner/work/dda-mod-ci/dda-mod-ci/tests/./catch/catch.hpp:13302
2024-01-22T01:54:31.2792919Z (dda,BL9_100monres)=>    runInternal
2024-01-22T01:54:31.2794043Z (dda,BL9_100monres)=>    /home/runner/work/dda-mod-ci/dda-mod-ci/tests/./catch/catch.hpp:13529
2024-01-22T01:54:31.2795077Z (dda,BL9_100monres)=>    Catch::Session::run()
2024-01-22T01:54:31.2796317Z (dda,BL9_100monres)=>    /home/runner/work/dda-mod-ci/dda-mod-ci/tests/./catch/catch.hpp:13486
2024-01-22T01:54:31.2797317Z (dda,BL9_100monres)=>    main
2024-01-22T01:54:31.2798409Z (dda,BL9_100monres)=>    /home/runner/work/dda-mod-ci/dda-mod-ci/tests/../tests/test_main.cpp:?
2024-01-22T01:54:31.2799385Z (dda,BL9_100monres)=>    ??
2024-01-22T01:54:31.2799940Z (dda,BL9_100monres)=>    ??:0
2024-01-22T01:54:31.2800481Z (dda,BL9_100monres)=>    ??
2024-01-22T01:54:31.2801020Z (dda,BL9_100monres)=>    ??:0
2024-01-22T01:54:31.2801552Z (dda,BL9_100monres)=>    _start
2024-01-22T01:54:31.2802087Z (dda,BL9_100monres)=>    ??:?
2024-01-22T01:54:31.2802696Z (dda,BL9_100monres)=>Backtrace emission took 4 seconds.
2024-01-22T01:54:31.2805387Z (dda,BL9_100monres)=>(continued from above) ERROR : src/worldfactory.cpp:735 [void worldfactory::load_last_world_info()] lastworld.json or one of its values is empty.  This could be due to data corruption or an unknown error and may be an indicator that your previously played world is damaged.
2024-01-22T01:54:31.2809330Z (dda,BL9_100monres)=>01:54:17.014 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_inhrav_4 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2812833Z (dda,BL9_100monres)=>01:54:17.014 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_inhrav_5 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2816309Z (dda,BL9_100monres)=>01:54:17.014 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_yengn_4 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2819960Z (dda,BL9_100monres)=>01:54:17.014 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_yengn_5 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2823776Z (dda,BL9_100monres)=>01:54:17.014 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_ulniv_4 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2827257Z (dda,BL9_100monres)=>01:54:17.014 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_ulniv_5 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2830849Z (dda,BL9_100monres)=>01:54:17.015 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_ezron_4 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2834580Z (dda,BL9_100monres)=>01:54:17.015 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_ezron_5 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2838282Z (dda,BL9_100monres)=>01:54:17.015 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_tavrav_5 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2842180Z (dda,BL9_100monres)=>01:54:17.016 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_argan_6 specifies more than one attack of (sub)type spell, ignoring all but the last
2024-01-22T01:54:31.2845764Z (dda,BL9_100monres)=>01:54:17.016 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_wanzel_6 specifies more than one attack of (sub)type spell, ignoring all but the last
2024-01-22T01:54:31.2849306Z (dda,BL9_100monres)=>01:54:17.017 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_davran_6 specifies more than one attack of (sub)type spell, ignoring all but the last
2024-01-22T01:54:31.2852917Z (dda,BL9_100monres)=>01:54:17.018 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_mutant_2 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2856738Z (dda,BL9_100monres)=>01:54:17.019 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_mutant_evo_2 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2860715Z (dda,BL9_100monres)=>01:54:17.020 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_assassin specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2864420Z (dda,BL9_100monres)=>01:54:17.020 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_assassin specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2868183Z (dda,BL9_100monres)=>01:54:17.020 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_twisted_one specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2870382Z (dda,BL9_100monres)=>[ Previous repeated 2 times ]
2024-01-22T01:54:31.2872708Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_twisted_one specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2876408Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_inhrav_6 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2880331Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_yengn_6 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2884046Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_ulniv_6 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2887700Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_ezron_6 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2891449Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_1 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2893671Z (dda,BL9_100monres)=>[ Previous repeated 2 times ]
2024-01-22T01:54:31.2896287Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_1 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2900435Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_regen specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2904093Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_regen_spiky specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2907762Z (dda,BL9_100monres)=>01:54:17.021 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_regen_spiky specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2911441Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_vile_one specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2915126Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_2 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2917298Z (dda,BL9_100monres)=>[ Previous repeated 2 times ]
2024-01-22T01:54:31.2919614Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_2 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2923325Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_3 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2925497Z (dda,BL9_100monres)=>[ Previous repeated 2 times ]
2024-01-22T01:54:31.2927764Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_3 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2931496Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_4 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2933886Z (dda,BL9_100monres)=>[ Previous repeated 2 times ]
2024-01-22T01:54:31.2936245Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_4 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2940143Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_5 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2942324Z (dda,BL9_100monres)=>[ Previous repeated 2 times ]
2024-01-22T01:54:31.2944630Z (dda,BL9_100monres)=>01:54:17.022 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_supersoldier_5 specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2948264Z (dda,BL9_100monres)=>01:54:17.023 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_repto specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2952152Z (dda,BL9_100monres)=>01:54:17.023 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_repto_evo specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2955849Z (dda,BL9_100monres)=>01:54:17.023 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_scrawler_evo specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2959560Z (dda,BL9_100monres)=>01:54:17.023 ERROR : src/monstergenerator.cpp:1482 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_BL9_scrawler_evo specifies more than one attack of (sub)type monster_attack, ignoring all but the last
2024-01-22T01:54:31.2962988Z (dda,BL9_100monres)=>01:54:17.576 INFO : src/mod_tracker.h:68: Tried check if 'FakeSpecial_s_gas' had a duplicate, but type 'overmap_special' does not track object sources
2024-01-22T01:54:31.2966559Z (dda,BL9_100monres)=>01:54:20.710 ERROR : src/item.cpp:1634 [ret_val<void> item::put_in(const item &, pocket_type, const bool, Character *)] tried to put an item (38_special) count (0) in a container (BL9_magnum_mk3) that cannot contain it: pocket unacceptable because item is not the correct ammo type
2024-01-22T01:54:31.2971036Z (dda,BL9_100monres)=>01:54:20.784 ERROR : src/item.cpp:1634 [ret_val<void> item::put_in(const item &, pocket_type, const bool, Character *)] tried to put an item (38_special) count (0) in a container (BL9_magnum) that cannot contain it: pocket unacceptable because item is not the correct ammo type
2024-01-22T01:54:31.2975524Z (dda,BL9_100monres)=>01:54:20.874 ERROR : src/item.cpp:1634 [ret_val<void> item::put_in(const item &, pocket_type, const bool, Character *)] tried to put an item (38_special) count (0) in a container (BL9_magnum_mk2) that cannot contain it: pocket unacceptable because item is not the correct ammo type
2024-01-22T01:54:31.2978249Z (dda,BL9_100monres)=>01:54:31.018 INFO : Game data loaded, running Catch2 session:
2024-01-22T01:54:31.2979588Z (dda,BL9_100monres)=>[1;33mFilters: [force_load_game]
2024-01-22T01:54:31.2980916Z (dda,BL9_100monres)=>[0m[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
2024-01-22T01:54:31.2982203Z (dda,BL9_100monres)=>test cases: 1[0;37m | [0m[0;32m1 passed[0m
2024-01-22T01:54:31.2983166Z (dda,BL9_100monres)=>assertions: [1;33m- none -[0m
2024-01-22T01:54:31.2983817Z (dda,BL9_100monres)=>
2024-01-22T01:54:31.2984248Z (dda,BL9_100monres)=>
2024-01-22T01:54:31.2984918Z (dda,BL9_100monres)=>01:54:31.019 INFO : Finished in 0.000101609 seconds
2024-01-22T01:54:31.2986185Z (dda,BL9_100monres)=>01:54:31.019 INFO : Randomness seeded to: 1705888451
2024-01-22T01:54:31.2986985Z (dda,BL9_100monres)=>
2024-01-22T01:54:31.2987913Z (dda,BL9_100monres)=>01:54:31.019 INFO : Treating result as failure due to error logged during initialization.
