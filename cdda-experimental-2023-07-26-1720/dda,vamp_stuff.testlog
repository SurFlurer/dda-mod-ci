2023-07-27T03:38:05.9868514Z (dda,vamp_stuff)=>
2023-07-27T03:38:05.9869513Z (dda,vamp_stuff)=>03:38:03.521 INFO : Randomness seeded to: 1690429083
2023-07-27T03:38:05.9870453Z (dda,vamp_stuff)=>03:38:03.521 WARNING : opendir [lang/mo/] failed with "No such file or directory".
2023-07-27T03:38:05.9871944Z (dda,vamp_stuff)=>03:38:03.523 INFO : SDL render devices: software, opengl, opengles2
2023-07-27T03:38:05.9925677Z (dda,vamp_stuff)=>03:38:03.524 INFO : [options] C locale set to C
2023-07-27T03:38:05.9926154Z (dda,vamp_stuff)=>03:38:03.524 INFO : [options] C++ locale set to C
2023-07-27T03:38:05.9926617Z (dda,vamp_stuff)=>03:38:05.669 ERROR : (error message will follow backtrace)
2023-07-27T03:38:05.9927249Z (dda,vamp_stuff)=>    ./tests/cata_test(debug_write_backtrace(std::ostream&)+0x23) [0x1f6a756]
2023-07-27T03:38:05.9927861Z (dda,vamp_stuff)=>    ./tests/cata_test(DebugLog(DebugLevel, DebugClass)+0x278) [0x1f69ce4]
2023-07-27T03:38:05.9928772Z (dda,vamp_stuff)=>    ./tests/cata_test(realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xa0) [0x1f695be]
2023-07-27T03:38:05.9929720Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::add_special_attack(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xfa) [0x26a378a]
2023-07-27T03:38:05.9931006Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::add_special_attacks(JsonObject const&, std::basic_string_view<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x155) [0x26a1ee1]
2023-07-27T03:38:05.9932048Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3aa8) [0x269e06e]
2023-07-27T03:38:05.9932993Z (dda,vamp_stuff)=>    ./tests/cata_test(generic_factory<mtype>::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x119) [0x26a67db]
2023-07-27T03:38:05.9934046Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)+0xae) [0x21c4018]
2023-07-27T03:38:05.9935438Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)+0xdf) [0x21c4c7d]
2023-07-27T03:38:05.9936549Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)+0x130) [0x21c4a88]
2023-07-27T03:38:05.9937713Z (dda,vamp_stuff)=>    ./tests/cata_test(game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)+0x166) [0x20b6c4a]
2023-07-27T03:38:05.9938545Z (dda,vamp_stuff)=>    ./tests/cata_test(game::load_world_modfiles(loading_ui&)+0x2f8) [0x20a480c]
2023-07-27T03:38:05.9939081Z (dda,vamp_stuff)=>    ./tests/cata_test(main+0xf9b) [0x1b318d6]
2023-07-27T03:38:05.9939913Z (dda,vamp_stuff)=>    /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7fbaaafafd90]
2023-07-27T03:38:05.9940613Z (dda,vamp_stuff)=>    /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0x80) [0x7fbaaafafe40]
2023-07-27T03:38:05.9941133Z (dda,vamp_stuff)=>    ./tests/cata_test(_start+0x25) [0x15017a5]
2023-07-27T03:38:05.9941458Z (dda,vamp_stuff)=>
2023-07-27T03:38:05.9942022Z (dda,vamp_stuff)=>    Attempting to repeat stack trace using debug symbolsâ€¦
2023-07-27T03:38:05.9942661Z (dda,vamp_stuff)=>    debug_write_backtrace(std::ostream&)
2023-07-27T03:38:05.9943069Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:05.9943472Z (dda,vamp_stuff)=>    DebugLog(DebugLevel, DebugClass)
2023-07-27T03:38:05.9944061Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:05.9944719Z (dda,vamp_stuff)=>    realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-27T03:38:05.9945418Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:05.9946060Z (dda,vamp_stuff)=>    mtype::add_special_attack(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-27T03:38:05.9946603Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:05.9947337Z (dda,vamp_stuff)=>    mtype::add_special_attacks(JsonObject const&, std::basic_string_view<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-27T03:38:05.9947909Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:05.9948512Z (dda,vamp_stuff)=>    mtype::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-27T03:38:18.3788335Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3789202Z (dda,vamp_stuff)=>    generic_factory<mtype>::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-27T03:38:18.3789851Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3790749Z (dda,vamp_stuff)=>    DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)
2023-07-27T03:38:18.3791469Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3792348Z (dda,vamp_stuff)=>    DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)
2023-07-27T03:38:18.3793065Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3793882Z (dda,vamp_stuff)=>    DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)
2023-07-27T03:38:18.3794551Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3795471Z (dda,vamp_stuff)=>    game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)
2023-07-27T03:38:18.3796247Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3796757Z (dda,vamp_stuff)=>    game::load_world_modfiles(loading_ui&)
2023-07-27T03:38:18.3797609Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3798004Z (dda,vamp_stuff)=>    main
2023-07-27T03:38:18.3798411Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3798804Z (dda,vamp_stuff)=>    ??
2023-07-27T03:38:18.3799213Z (dda,vamp_stuff)=>    ??:0
2023-07-27T03:38:18.3799605Z (dda,vamp_stuff)=>    ??
2023-07-27T03:38:18.3800019Z (dda,vamp_stuff)=>    ??:0
2023-07-27T03:38:18.3800401Z (dda,vamp_stuff)=>    _start
2023-07-27T03:38:18.3800812Z (dda,vamp_stuff)=>    ??:?
2023-07-27T03:38:18.3801733Z (dda,vamp_stuff)=>Backtrace emission took 1 seconds.
2023-07-27T03:38:18.3803147Z (dda,vamp_stuff)=>(continued from above) ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_succumbvampire_warlock specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:38:18.3804564Z (dda,vamp_stuff)=>03:38:06.093 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_succumbvampire_conjurer specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:38:18.3806097Z (dda,vamp_stuff)=>03:38:08.476 INFO : src/mod_tracker.h:68: Tried check if 'FakeSpecial_s_gas' had a duplicate, but type 'overmap_special' does not track object sources
2023-07-27T03:38:18.3806813Z (dda,vamp_stuff)=>03:38:18.113 INFO : Game data loaded, running Catch2 session:
2023-07-27T03:38:18.3807375Z (dda,vamp_stuff)=>[1;33mFilters: ~*
2023-07-27T03:38:18.3807886Z (dda,vamp_stuff)=>[0mNo test cases matched '~*'
2023-07-27T03:38:18.3808561Z (dda,vamp_stuff)=>[1;33m===============================================================================[0m
2023-07-27T03:38:18.3809071Z (dda,vamp_stuff)=>[1;33mNo tests ran
2023-07-27T03:38:18.3810028Z (dda,vamp_stuff)=>[0m
2023-07-27T03:38:18.3810349Z (dda,vamp_stuff)=>
2023-07-27T03:38:18.3810784Z (dda,vamp_stuff)=>03:38:18.114 INFO : Finished in 0.00139617 seconds
2023-07-27T03:38:18.3811298Z (dda,vamp_stuff)=>03:38:18.114 INFO : Randomness seeded to: 1690429083
2023-07-27T03:38:18.3811684Z (dda,vamp_stuff)=>
2023-07-27T03:38:18.3812219Z (dda,vamp_stuff)=>03:38:18.114 INFO : Treating result as failure due to error logged during initialization.
