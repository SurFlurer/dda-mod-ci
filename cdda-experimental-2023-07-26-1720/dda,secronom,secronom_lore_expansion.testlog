2023-07-27T03:33:57.0020612Z (dda,secronom,secronom_lore_expansion)=>
2023-07-27T03:33:57.0021563Z (dda,secronom,secronom_lore_expansion)=>03:33:54.850 INFO : Randomness seeded to: 1690428834
2023-07-27T03:33:57.0022715Z (dda,secronom,secronom_lore_expansion)=>03:33:54.850 WARNING : opendir [lang/mo/] failed with "No such file or directory".
2023-07-27T03:33:57.0023607Z (dda,secronom,secronom_lore_expansion)=>03:33:54.853 INFO : SDL render devices: software, opengl, opengles2
2023-07-27T03:33:57.0024389Z (dda,secronom,secronom_lore_expansion)=>03:33:54.853 INFO : [options] C locale set to C
2023-07-27T03:33:57.0026546Z (dda,secronom,secronom_lore_expansion)=>03:33:54.853 INFO : [options] C++ locale set to C
2023-07-27T03:33:57.0027234Z (dda,secronom,secronom_lore_expansion)=>03:33:56.987 ERROR : (error message will follow backtrace)
2023-07-27T03:33:57.0044473Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(debug_write_backtrace(std::ostream&)+0x23) [0x1f6a756]
2023-07-27T03:33:57.0045248Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DebugLog(DebugLevel, DebugClass)+0x278) [0x1f69ce4]
2023-07-27T03:33:57.0046224Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xa0) [0x1f695be]
2023-07-27T03:33:57.0047229Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(JsonObject::error_skipped_members(std::vector<unsigned long, std::allocator<unsigned long> > const&) const+0x2bc) [0x209e8a8]
2023-07-27T03:33:57.0048076Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(JsonObject::report_unvisited() const+0x32c) [0x209e59a]
2023-07-27T03:33:57.0048782Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(JsonObject::~JsonObject()+0x3d) [0x1725e8f]
2023-07-27T03:33:57.0051071Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(Item_factory::set_use_methods_from_json(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, use_function, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, use_function> > >&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >&)+0x5e9) [0x22ccb79]
2023-07-27T03:33:57.0053288Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(Item_factory::load_basic_info(JsonObject const&, itype&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x2b0d) [0x22c0177]
2023-07-27T03:33:57.0054350Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(Item_factory::load_tool(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x5f) [0x22c618f]
2023-07-27T03:33:57.0055698Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)+0xae) [0x21c4018]
2023-07-27T03:33:57.0056938Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)+0xdf) [0x21c4c7d]
2023-07-27T03:33:57.0058151Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)+0x130) [0x21c4a88]
2023-07-27T03:33:57.0059409Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)+0x166) [0x20b6c4a]
2023-07-27T03:33:57.0060333Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(game::load_world_modfiles(loading_ui&)+0x2f8) [0x20a480c]
2023-07-27T03:33:57.0060959Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(main+0xf9b) [0x1b318d6]
2023-07-27T03:34:04.1145745Z (dda,secronom,secronom_lore_expansion)=>    /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7f305d1a8d90]
2023-07-27T03:34:04.1147468Z (dda,secronom,secronom_lore_expansion)=>    /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0x80) [0x7f305d1a8e40]
2023-07-27T03:34:04.1148155Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(_start+0x25) [0x15017a5]
2023-07-27T03:34:04.1148613Z (dda,secronom,secronom_lore_expansion)=>
2023-07-27T03:34:04.1243060Z (dda,secronom,secronom_lore_expansion)=>    Attempting to repeat stack trace using debug symbolsâ€¦
2023-07-27T03:34:04.1243848Z (dda,secronom,secronom_lore_expansion)=>    debug_write_backtrace(std::ostream&)
2023-07-27T03:34:04.1244416Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1244959Z (dda,secronom,secronom_lore_expansion)=>    DebugLog(DebugLevel, DebugClass)
2023-07-27T03:34:04.1245482Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1246226Z (dda,secronom,secronom_lore_expansion)=>    realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-27T03:34:04.1246920Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1247605Z (dda,secronom,secronom_lore_expansion)=>    JsonObject::error_skipped_members(std::vector<unsigned long, std::allocator<unsigned long> > const&) const
2023-07-27T03:34:04.1248202Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1248740Z (dda,secronom,secronom_lore_expansion)=>    JsonObject::report_unvisited() const
2023-07-27T03:34:04.1249250Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1249766Z (dda,secronom,secronom_lore_expansion)=>    JsonObject::~JsonObject()
2023-07-27T03:34:04.1250250Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1252555Z (dda,secronom,secronom_lore_expansion)=>    Item_factory::set_use_methods_from_json(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, use_function, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, use_function> > >&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >&)
2023-07-27T03:34:04.1254002Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1254758Z (dda,secronom,secronom_lore_expansion)=>    Item_factory::load_basic_info(JsonObject const&, itype&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-27T03:34:04.1255413Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1256125Z (dda,secronom,secronom_lore_expansion)=>    Item_factory::load_tool(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-27T03:34:04.1256752Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1257579Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)
2023-07-27T03:34:04.1258283Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1259126Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)
2023-07-27T03:34:04.1259826Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1260781Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)
2023-07-27T03:34:04.1261457Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1262343Z (dda,secronom,secronom_lore_expansion)=>    game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)
2023-07-27T03:34:04.1263346Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1263892Z (dda,secronom,secronom_lore_expansion)=>    game::load_world_modfiles(loading_ui&)
2023-07-27T03:34:04.1264408Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1264844Z (dda,secronom,secronom_lore_expansion)=>    main
2023-07-27T03:34:04.1265293Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1265742Z (dda,secronom,secronom_lore_expansion)=>    ??
2023-07-27T03:34:04.1467843Z (dda,secronom,secronom_lore_expansion)=>    ??:0
2023-07-27T03:34:04.1469183Z (dda,secronom,secronom_lore_expansion)=>    ??
2023-07-27T03:34:04.1469725Z (dda,secronom,secronom_lore_expansion)=>    ??:0
2023-07-27T03:34:04.1470189Z (dda,secronom,secronom_lore_expansion)=>    _start
2023-07-27T03:34:04.1470639Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-27T03:34:04.1471112Z (dda,secronom,secronom_lore_expansion)=>Backtrace emission took 8 seconds.
2023-07-27T03:34:04.1472381Z (dda,secronom,secronom_lore_expansion)=>(continued from above) ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1515334Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-27T03:34:04.1526277Z (dda,secronom,secronom_lore_expansion)=>03:34:04.144 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1528829Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-27T03:34:04.1530417Z (dda,secronom,secronom_lore_expansion)=>03:34:04.144 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1532571Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-27T03:34:04.1534105Z (dda,secronom,secronom_lore_expansion)=>03:34:04.145 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1536343Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-27T03:34:04.1537916Z (dda,secronom,secronom_lore_expansion)=>03:34:04.145 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1540270Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-27T03:34:04.1541800Z (dda,secronom,secronom_lore_expansion)=>03:34:04.145 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1544215Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-27T03:34:04.1545753Z (dda,secronom,secronom_lore_expansion)=>03:34:04.146 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1547938Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-27T03:34:04.1549466Z (dda,secronom,secronom_lore_expansion)=>03:34:04.146 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1551566Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-27T03:34:04.1553299Z (dda,secronom,secronom_lore_expansion)=>03:34:04.147 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1555408Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-27T03:34:04.1556941Z (dda,secronom,secronom_lore_expansion)=>03:34:04.148 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1559141Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-27T03:34:04.1560759Z (dda,secronom,secronom_lore_expansion)=>03:34:04.148 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1562844Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-27T03:34:04.1564384Z (dda,secronom,secronom_lore_expansion)=>03:34:04.149 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.1566437Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-27T03:34:04.2484365Z (dda,secronom,secronom_lore_expansion)=>03:34:04.149 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.2487585Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-27T03:34:04.2489755Z (dda,secronom,secronom_lore_expansion)=>03:34:04.150 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.2492692Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-27T03:34:04.2494596Z (dda,secronom,secronom_lore_expansion)=>03:34:04.150 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-27T03:34:04.2497151Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-27T03:34:04.2499364Z (dda,secronom,secronom_lore_expansion)=>03:34:04.210 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_flesh_initial specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:04.2500759Z (dda,secronom,secronom_lore_expansion)=>03:34:04.211 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_veinstalk_initial specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:04.2502109Z (dda,secronom,secronom_lore_expansion)=>03:34:04.213 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler specifies more than one attack of (sub)type leap, ignoring all but the last
2023-07-27T03:34:04.2504729Z (dda,secronom,secronom_lore_expansion)=>03:34:04.213 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler_brute specifies more than one attack of (sub)type leap, ignoring all but the last
2023-07-27T03:34:04.2506128Z (dda,secronom,secronom_lore_expansion)=>03:34:04.214 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler_scout specifies more than one attack of (sub)type leap, ignoring all but the last
2023-07-27T03:34:04.2507486Z (dda,secronom,secronom_lore_expansion)=>03:34:04.224 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_weak specifies more than one attack of (sub)type gun, ignoring all but the last
2023-07-27T03:34:04.2508832Z (dda,secronom,secronom_lore_expansion)=>03:34:04.224 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_mode specifies more than one attack of (sub)type gun, ignoring all but the last
2023-07-27T03:34:04.2510428Z (dda,secronom,secronom_lore_expansion)=>03:34:04.224 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_stro specifies more than one attack of (sub)type gun, ignoring all but the last
2023-07-27T03:34:16.7670741Z (dda,secronom,secronom_lore_expansion)=>03:34:04.224 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_vstro specifies more than one attack of (sub)type gun, ignoring all but the last
2023-07-27T03:34:16.7672230Z (dda,secronom,secronom_lore_expansion)=>03:34:04.248 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_centipede_mom specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7673629Z (dda,secronom,secronom_lore_expansion)=>03:34:04.249 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_spider_cellar_mega specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7675053Z (dda,secronom,secronom_lore_expansion)=>03:34:04.262 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_wretch specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7676442Z (dda,secronom,secronom_lore_expansion)=>03:34:04.265 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_boomer_glutton specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7677836Z (dda,secronom,secronom_lore_expansion)=>03:34:04.265 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_boomer_claymore specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7679645Z (dda,secronom,secronom_lore_expansion)=>03:34:04.266 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_phase_skulker specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7681082Z (dda,secronom,secronom_lore_expansion)=>03:34:04.266 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_phase_shrike specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7682446Z (dda,secronom,secronom_lore_expansion)=>03:34:04.270 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_frog_mother specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7683835Z (dda,secronom,secronom_lore_expansion)=>03:34:04.272 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_crawler_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7685196Z (dda,secronom,secronom_lore_expansion)=>03:34:04.272 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7686555Z (dda,secronom,secronom_lore_expansion)=>03:34:04.272 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_hulk_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7687934Z (dda,secronom,secronom_lore_expansion)=>03:34:04.272 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_pupa_shady specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7689855Z (dda,secronom,secronom_lore_expansion)=>03:34:06.716 INFO : src/mod_tracker.h:68: Tried check if 'FakeSpecial_s_gas' had a duplicate, but type 'overmap_special' does not track object sources
2023-07-27T03:34:16.7691099Z (dda,secronom,secronom_lore_expansion)=>03:34:10.103 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_brute_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-27T03:34:16.7692044Z (dda,secronom,secronom_lore_expansion)=>03:34:16.765 INFO : Game data loaded, running Catch2 session:
2023-07-27T03:34:16.7692736Z (dda,secronom,secronom_lore_expansion)=>[1;33mFilters: ~*
2023-07-27T03:34:16.7693416Z (dda,secronom,secronom_lore_expansion)=>[0mNo test cases matched '~*'
2023-07-27T03:34:17.0519926Z (dda,secronom,secronom_lore_expansion)=>[1;33m===============================================================================[0m
2023-07-27T03:34:17.0520633Z (dda,secronom,secronom_lore_expansion)=>[1;33mNo tests ran
2023-07-27T03:34:17.0521122Z (dda,secronom,secronom_lore_expansion)=>[0m
2023-07-27T03:34:17.0521539Z (dda,secronom,secronom_lore_expansion)=>
2023-07-27T03:34:17.0522013Z (dda,secronom,secronom_lore_expansion)=>03:34:16.766 INFO : Finished in 0.00164339 seconds
2023-07-27T03:34:17.0522552Z (dda,secronom,secronom_lore_expansion)=>03:34:16.767 INFO : Randomness seeded to: 1690428834
2023-07-27T03:34:17.0522977Z (dda,secronom,secronom_lore_expansion)=>
2023-07-27T03:34:17.0523541Z (dda,secronom,secronom_lore_expansion)=>03:34:16.767 INFO : Treating result as failure due to error logged during initialization.
