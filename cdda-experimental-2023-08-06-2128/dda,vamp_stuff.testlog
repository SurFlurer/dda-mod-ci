2023-08-07T13:00:32.3802447Z (dda,vamp_stuff)=>
2023-08-07T13:00:32.3803065Z (dda,vamp_stuff)=>13:00:30.397 INFO : Randomness seeded to: 1691413230
2023-08-07T13:00:32.3803590Z (dda,vamp_stuff)=>13:00:30.398 WARNING : opendir [lang/mo/] failed with "No such file or directory".
2023-08-07T13:00:32.3804101Z (dda,vamp_stuff)=>13:00:30.400 INFO : SDL render devices: software, opengl, opengles2
2023-08-07T13:00:32.3804560Z (dda,vamp_stuff)=>13:00:30.400 INFO : [options] C locale set to C
2023-08-07T13:00:32.3804969Z (dda,vamp_stuff)=>13:00:30.400 INFO : [options] C++ locale set to C
2023-08-07T13:00:32.3805414Z (dda,vamp_stuff)=>13:00:32.132 ERROR : (error message will follow backtrace)
2023-08-07T13:00:32.3805982Z (dda,vamp_stuff)=>    ./tests/cata_test(debug_write_backtrace(std::ostream&)+0x23) [0x1f79fa6]
2023-08-07T13:00:32.3806524Z (dda,vamp_stuff)=>    ./tests/cata_test(DebugLog(DebugLevel, DebugClass)+0x278) [0x1f79534]
2023-08-07T13:00:32.3807267Z (dda,vamp_stuff)=>    ./tests/cata_test(realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xa0) [0x1f78e0e]
2023-08-07T13:00:32.3835495Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::add_special_attack(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xfa) [0x26b4a62]
2023-08-07T13:00:32.3836585Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::add_special_attacks(JsonObject const&, std::basic_string_view<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x155) [0x26b31b9]
2023-08-07T13:00:32.3837369Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3aa8) [0x26af346]
2023-08-07T13:00:32.3838100Z (dda,vamp_stuff)=>    ./tests/cata_test(generic_factory<mtype>::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x119) [0x26b7ab3]
2023-08-07T13:00:32.3838899Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)+0xae) [0x21d30b2]
2023-08-07T13:00:32.3839781Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)+0xdf) [0x21d3d17]
2023-08-07T13:00:32.3840626Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)+0x130) [0x21d3b22]
2023-08-07T13:00:32.3843423Z (dda,vamp_stuff)=>    ./tests/cata_test(game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)+0x166) [0x20c63c0]
2023-08-07T13:00:32.3844080Z (dda,vamp_stuff)=>    ./tests/cata_test(game::load_world_modfiles(loading_ui&)+0x2f8) [0x20b3f6e]
2023-08-07T13:00:32.3845979Z (dda,vamp_stuff)=>    ./tests/cata_test(main+0xf9b) [0x1b3dafe]
2023-08-07T13:00:32.3846824Z (dda,vamp_stuff)=>    /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7f4ed55bdd90]
2023-08-07T13:00:32.3848032Z (dda,vamp_stuff)=>    /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0x80) [0x7f4ed55bde40]
2023-08-07T13:00:32.3848439Z (dda,vamp_stuff)=>    ./tests/cata_test(_start+0x25) [0x1507ab5]
2023-08-07T13:00:32.3848697Z (dda,vamp_stuff)=>
2023-08-07T13:00:32.3849148Z (dda,vamp_stuff)=>    Attempting to repeat stack trace using debug symbolsâ€¦
2023-08-07T13:00:32.3849553Z (dda,vamp_stuff)=>    debug_write_backtrace(std::ostream&)
2023-08-07T13:00:32.3849862Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:32.3850184Z (dda,vamp_stuff)=>    DebugLog(DebugLevel, DebugClass)
2023-08-07T13:00:32.3850489Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:32.3851007Z (dda,vamp_stuff)=>    realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:32.3851409Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:32.3851891Z (dda,vamp_stuff)=>    mtype::add_special_attack(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:32.3852304Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:32.3852861Z (dda,vamp_stuff)=>    mtype::add_special_attacks(JsonObject const&, std::basic_string_view<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:32.3853299Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:32.3853766Z (dda,vamp_stuff)=>    mtype::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:44.0459564Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0460575Z (dda,vamp_stuff)=>    generic_factory<mtype>::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:44.0461098Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0461752Z (dda,vamp_stuff)=>    DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)
2023-08-07T13:00:44.0462300Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0462960Z (dda,vamp_stuff)=>    DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)
2023-08-07T13:00:44.0463489Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0464092Z (dda,vamp_stuff)=>    DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)
2023-08-07T13:00:44.0464600Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0465294Z (dda,vamp_stuff)=>    game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)
2023-08-07T13:00:44.0465870Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0466278Z (dda,vamp_stuff)=>    game::load_world_modfiles(loading_ui&)
2023-08-07T13:00:44.0466663Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0466999Z (dda,vamp_stuff)=>    main
2023-08-07T13:00:44.0467317Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0467649Z (dda,vamp_stuff)=>    ??
2023-08-07T13:00:44.0467993Z (dda,vamp_stuff)=>    ??:0
2023-08-07T13:00:44.0468315Z (dda,vamp_stuff)=>    ??
2023-08-07T13:00:44.0468643Z (dda,vamp_stuff)=>    ??:0
2023-08-07T13:00:44.0468983Z (dda,vamp_stuff)=>    _start
2023-08-07T13:00:44.0469377Z (dda,vamp_stuff)=>    ??:?
2023-08-07T13:00:44.0470333Z (dda,vamp_stuff)=>Backtrace emission took 0 seconds.
2023-08-07T13:00:44.0471052Z (dda,vamp_stuff)=>(continued from above) ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_succumbvampire_warlock specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:44.0472104Z (dda,vamp_stuff)=>13:00:32.464 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_succumbvampire_conjurer specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:44.0473109Z (dda,vamp_stuff)=>13:00:34.390 INFO : src/mod_tracker.h:68: Tried check if 'FakeSpecial_s_gas' had a duplicate, but type 'overmap_special' does not track object sources
2023-08-07T13:00:44.0473590Z (dda,vamp_stuff)=>13:00:43.833 INFO : Game data loaded, running Catch2 session:
2023-08-07T13:00:44.0473946Z (dda,vamp_stuff)=>[1;33mFilters: ~*
2023-08-07T13:00:44.0474302Z (dda,vamp_stuff)=>[0mNo test cases matched '~*'
2023-08-07T13:00:44.0474729Z (dda,vamp_stuff)=>[1;33m===============================================================================[0m
2023-08-07T13:00:44.0475071Z (dda,vamp_stuff)=>[1;33mNo tests ran
2023-08-07T13:00:44.0475345Z (dda,vamp_stuff)=>[0m
2023-08-07T13:00:44.0475567Z (dda,vamp_stuff)=>
2023-08-07T13:00:44.0475852Z (dda,vamp_stuff)=>13:00:43.835 INFO : Finished in 0.0011984 seconds
2023-08-07T13:00:44.0476174Z (dda,vamp_stuff)=>13:00:43.835 INFO : Randomness seeded to: 1691413230
2023-08-07T13:00:44.0476438Z (dda,vamp_stuff)=>
2023-08-07T13:00:44.0476794Z (dda,vamp_stuff)=>13:00:43.835 INFO : Treating result as failure due to error logged during initialization.
