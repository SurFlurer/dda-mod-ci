2023-08-07T13:00:17.8693378Z (dda,secronom,secronom_lore_expansion)=>
2023-08-07T13:00:17.8693969Z (dda,secronom,secronom_lore_expansion)=>13:00:15.831 INFO : Randomness seeded to: 1691413215
2023-08-07T13:00:17.8694534Z (dda,secronom,secronom_lore_expansion)=>13:00:15.832 WARNING : opendir [lang/mo/] failed with "No such file or directory".
2023-08-07T13:00:17.8695126Z (dda,secronom,secronom_lore_expansion)=>13:00:15.834 INFO : SDL render devices: software, opengl, opengles2
2023-08-07T13:00:17.8695643Z (dda,secronom,secronom_lore_expansion)=>13:00:15.834 INFO : [options] C locale set to C
2023-08-07T13:00:17.8696135Z (dda,secronom,secronom_lore_expansion)=>13:00:15.834 INFO : [options] C++ locale set to C
2023-08-07T13:00:17.8696648Z (dda,secronom,secronom_lore_expansion)=>13:00:17.615 ERROR : (error message will follow backtrace)
2023-08-07T13:00:17.8697274Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(debug_write_backtrace(std::ostream&)+0x23) [0x1f79fa6]
2023-08-07T13:00:17.8697901Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DebugLog(DebugLevel, DebugClass)+0x278) [0x1f79534]
2023-08-07T13:00:17.8698709Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xa0) [0x1f78e0e]
2023-08-07T13:00:17.8699930Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(mtype::add_special_attack(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xfa) [0x26b4a62]
2023-08-07T13:00:17.8700934Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(mtype::add_special_attacks(JsonObject const&, std::basic_string_view<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x155) [0x26b31b9]
2023-08-07T13:00:17.8701865Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(mtype::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x4409) [0x26afca7]
2023-08-07T13:00:17.8702730Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(generic_factory<mtype>::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x119) [0x26b7ab3]
2023-08-07T13:00:17.8703670Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)+0xae) [0x21d30b2]
2023-08-07T13:00:17.8704824Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)+0xdf) [0x21d3d17]
2023-08-07T13:00:17.8705805Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)+0x130) [0x21d3b22]
2023-08-07T13:00:17.8706825Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)+0x166) [0x20c63c0]
2023-08-07T13:00:17.8707603Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(game::load_world_modfiles(loading_ui&)+0x2f8) [0x20b3f6e]
2023-08-07T13:00:17.8708307Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(main+0xf9b) [0x1b3dafe]
2023-08-07T13:00:17.8709136Z (dda,secronom,secronom_lore_expansion)=>    /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7f91f8ac4d90]
2023-08-07T13:00:17.8709846Z (dda,secronom,secronom_lore_expansion)=>    /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0x80) [0x7f91f8ac4e40]
2023-08-07T13:00:17.8710398Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(_start+0x25) [0x1507ab5]
2023-08-07T13:00:17.8710816Z (dda,secronom,secronom_lore_expansion)=>
2023-08-07T13:00:17.8711430Z (dda,secronom,secronom_lore_expansion)=>    Attempting to repeat stack trace using debug symbolsâ€¦
2023-08-07T13:00:17.8711996Z (dda,secronom,secronom_lore_expansion)=>    debug_write_backtrace(std::ostream&)
2023-08-07T13:00:17.8712461Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.8712940Z (dda,secronom,secronom_lore_expansion)=>    DebugLog(DebugLevel, DebugClass)
2023-08-07T13:00:17.8713416Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9698597Z (dda,secronom,secronom_lore_expansion)=>    realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:17.9699637Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9700726Z (dda,secronom,secronom_lore_expansion)=>    mtype::add_special_attack(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:17.9701292Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9702198Z (dda,secronom,secronom_lore_expansion)=>    mtype::add_special_attacks(JsonObject const&, std::basic_string_view<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:17.9702769Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9703358Z (dda,secronom,secronom_lore_expansion)=>    mtype::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:17.9703835Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9704407Z (dda,secronom,secronom_lore_expansion)=>    generic_factory<mtype>::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-08-07T13:00:17.9704879Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9705499Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)
2023-08-07T13:00:17.9706018Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9706670Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)
2023-08-07T13:00:17.9707203Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9707796Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)
2023-08-07T13:00:17.9708306Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9708983Z (dda,secronom,secronom_lore_expansion)=>    game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)
2023-08-07T13:00:17.9709531Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9709939Z (dda,secronom,secronom_lore_expansion)=>    game::load_world_modfiles(loading_ui&)
2023-08-07T13:00:17.9710468Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9710795Z (dda,secronom,secronom_lore_expansion)=>    main
2023-08-07T13:00:17.9711119Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9711445Z (dda,secronom,secronom_lore_expansion)=>    ??
2023-08-07T13:00:17.9711795Z (dda,secronom,secronom_lore_expansion)=>    ??:0
2023-08-07T13:00:17.9712112Z (dda,secronom,secronom_lore_expansion)=>    ??
2023-08-07T13:00:17.9712446Z (dda,secronom,secronom_lore_expansion)=>    ??:0
2023-08-07T13:00:17.9712784Z (dda,secronom,secronom_lore_expansion)=>    _start
2023-08-07T13:00:17.9713120Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-08-07T13:00:17.9713472Z (dda,secronom,secronom_lore_expansion)=>Backtrace emission took 0 seconds.
2023-08-07T13:00:17.9714248Z (dda,secronom,secronom_lore_expansion)=>(continued from above) ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_flesh_initial specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:17.9715167Z (dda,secronom,secronom_lore_expansion)=>13:00:17.959 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_veinstalk_initial specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:17.9716034Z (dda,secronom,secronom_lore_expansion)=>13:00:17.961 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler specifies more than one attack of (sub)type leap, ignoring all but the last
2023-08-07T13:00:17.9716974Z (dda,secronom,secronom_lore_expansion)=>13:00:17.961 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler_brute specifies more than one attack of (sub)type leap, ignoring all but the last
2023-08-07T13:00:17.9717825Z (dda,secronom,secronom_lore_expansion)=>13:00:17.961 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler_scout specifies more than one attack of (sub)type leap, ignoring all but the last
2023-08-07T13:00:20.0326605Z (dda,secronom,secronom_lore_expansion)=>13:00:17.970 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_weak specifies more than one attack of (sub)type gun, ignoring all but the last
2023-08-07T13:00:20.0328083Z (dda,secronom,secronom_lore_expansion)=>13:00:17.970 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_mode specifies more than one attack of (sub)type gun, ignoring all but the last
2023-08-07T13:00:20.0329212Z (dda,secronom,secronom_lore_expansion)=>13:00:17.970 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_stro specifies more than one attack of (sub)type gun, ignoring all but the last
2023-08-07T13:00:20.0379258Z (dda,secronom,secronom_lore_expansion)=>13:00:17.970 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_vstro specifies more than one attack of (sub)type gun, ignoring all but the last
2023-08-07T13:00:20.0380135Z (dda,secronom,secronom_lore_expansion)=>13:00:17.990 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_centipede_mom specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0381007Z (dda,secronom,secronom_lore_expansion)=>13:00:17.991 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_spider_cellar_mega specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0381869Z (dda,secronom,secronom_lore_expansion)=>13:00:18.002 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_wretch specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0383352Z (dda,secronom,secronom_lore_expansion)=>13:00:18.004 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_boomer_glutton specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0384205Z (dda,secronom,secronom_lore_expansion)=>13:00:18.004 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_boomer_claymore specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0385069Z (dda,secronom,secronom_lore_expansion)=>13:00:18.005 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_phase_skulker specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0385927Z (dda,secronom,secronom_lore_expansion)=>13:00:18.005 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_phase_shrike specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0386779Z (dda,secronom,secronom_lore_expansion)=>13:00:18.008 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_frog_mother specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0406523Z (dda,secronom,secronom_lore_expansion)=>13:00:18.009 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_crawler_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0407834Z (dda,secronom,secronom_lore_expansion)=>13:00:18.010 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:20.0408698Z (dda,secronom,secronom_lore_expansion)=>13:00:18.010 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_hulk_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:30.3736181Z (dda,secronom,secronom_lore_expansion)=>13:00:18.010 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_pupa_shady specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:30.3743518Z (dda,secronom,secronom_lore_expansion)=>13:00:20.032 INFO : src/mod_tracker.h:68: Tried check if 'FakeSpecial_s_gas' had a duplicate, but type 'overmap_special' does not track object sources
2023-08-07T13:00:30.3744725Z (dda,secronom,secronom_lore_expansion)=>13:00:22.923 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_brute_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-08-07T13:00:30.3745517Z (dda,secronom,secronom_lore_expansion)=>13:00:30.141 INFO : Game data loaded, running Catch2 session:
2023-08-07T13:00:30.3746574Z (dda,secronom,secronom_lore_expansion)=>[1;33mFilters: ~*
2023-08-07T13:00:30.3747067Z (dda,secronom,secronom_lore_expansion)=>[0mNo test cases matched '~*'
2023-08-07T13:00:30.3747611Z (dda,secronom,secronom_lore_expansion)=>[1;33m===============================================================================[0m
2023-08-07T13:00:30.3748054Z (dda,secronom,secronom_lore_expansion)=>[1;33mNo tests ran
2023-08-07T13:00:30.3748431Z (dda,secronom,secronom_lore_expansion)=>[0m
2023-08-07T13:00:30.3748999Z (dda,secronom,secronom_lore_expansion)=>
2023-08-07T13:00:30.3749353Z (dda,secronom,secronom_lore_expansion)=>13:00:30.142 INFO : Finished in 0.00123221 seconds
2023-08-07T13:00:30.3749787Z (dda,secronom,secronom_lore_expansion)=>13:00:30.142 INFO : Randomness seeded to: 1691413215
2023-08-07T13:00:30.3750139Z (dda,secronom,secronom_lore_expansion)=>
2023-08-07T13:00:30.3750591Z (dda,secronom,secronom_lore_expansion)=>13:00:30.142 INFO : Treating result as failure due to error logged during initialization.
