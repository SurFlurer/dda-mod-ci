2023-07-28T02:19:17.5696352Z (dda,vamp_stuff)=>
2023-07-28T02:19:17.5697498Z (dda,vamp_stuff)=>02:19:14.618 INFO : Randomness seeded to: 1690510754
2023-07-28T02:19:17.5698523Z (dda,vamp_stuff)=>02:19:14.618 WARNING : opendir [lang/mo/] failed with "No such file or directory".
2023-07-28T02:19:17.5699532Z (dda,vamp_stuff)=>02:19:14.621 INFO : SDL render devices: software, opengl, opengles2
2023-07-28T02:19:17.5700851Z (dda,vamp_stuff)=>02:19:14.621 INFO : [options] C locale set to C
2023-07-28T02:19:17.5701414Z (dda,vamp_stuff)=>02:19:14.621 INFO : [options] C++ locale set to C
2023-07-28T02:19:17.5711916Z (dda,vamp_stuff)=>02:19:16.771 ERROR : (error message will follow backtrace)
2023-07-28T02:19:17.5732438Z (dda,vamp_stuff)=>    ./tests/cata_test(debug_write_backtrace(std::ostream&)+0x23) [0x1f6a77e]
2023-07-28T02:19:17.5733146Z (dda,vamp_stuff)=>    ./tests/cata_test(DebugLog(DebugLevel, DebugClass)+0x278) [0x1f69d0c]
2023-07-28T02:19:17.5734166Z (dda,vamp_stuff)=>    ./tests/cata_test(realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xa0) [0x1f695e6]
2023-07-28T02:19:17.5739013Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::add_special_attack(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xfa) [0x26a320a]
2023-07-28T02:19:17.5741226Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::add_special_attacks(JsonObject const&, std::basic_string_view<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x155) [0x26a1961]
2023-07-28T02:19:17.5743969Z (dda,vamp_stuff)=>    ./tests/cata_test(mtype::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3aa8) [0x269daee]
2023-07-28T02:19:17.5745914Z (dda,vamp_stuff)=>    ./tests/cata_test(generic_factory<mtype>::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x119) [0x26a625b]
2023-07-28T02:19:17.5748157Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)+0xae) [0x21c417c]
2023-07-28T02:19:17.5750700Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)+0xdf) [0x21c4de1]
2023-07-28T02:19:17.5753173Z (dda,vamp_stuff)=>    ./tests/cata_test(DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)+0x130) [0x21c4bec]
2023-07-28T02:19:17.5756646Z (dda,vamp_stuff)=>    ./tests/cata_test(game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)+0x166) [0x20b6c94]
2023-07-28T02:19:17.5758483Z (dda,vamp_stuff)=>    ./tests/cata_test(game::load_world_modfiles(loading_ui&)+0x2f8) [0x20a4856]
2023-07-28T02:19:17.5840999Z (dda,vamp_stuff)=>    ./tests/cata_test(main+0xf9b) [0x1b318fa]
2023-07-28T02:19:17.5842135Z (dda,vamp_stuff)=>    /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7f19d00ccd90]
2023-07-28T02:19:17.5842996Z (dda,vamp_stuff)=>    /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0x80) [0x7f19d00cce40]
2023-07-28T02:19:17.5843531Z (dda,vamp_stuff)=>    ./tests/cata_test(_start+0x25) [0x15017a5]
2023-07-28T02:19:17.5843880Z (dda,vamp_stuff)=>
2023-07-28T02:19:17.5844818Z (dda,vamp_stuff)=>    Attempting to repeat stack trace using debug symbolsâ€¦
2023-07-28T02:19:17.5845381Z (dda,vamp_stuff)=>    debug_write_backtrace(std::ostream&)
2023-07-28T02:19:17.5845787Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:17.5846546Z (dda,vamp_stuff)=>    DebugLog(DebugLevel, DebugClass)
2023-07-28T02:19:17.5846959Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:17.5847618Z (dda,vamp_stuff)=>    realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-28T02:19:17.5848152Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:17.5848775Z (dda,vamp_stuff)=>    mtype::add_special_attack(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-28T02:19:17.5849320Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:17.5850059Z (dda,vamp_stuff)=>    mtype::add_special_attacks(JsonObject const&, std::basic_string_view<char, std::char_traits<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-28T02:19:17.5850654Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:17.5851248Z (dda,vamp_stuff)=>    mtype::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-28T02:19:29.9815312Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9816063Z (dda,vamp_stuff)=>    generic_factory<mtype>::load(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-28T02:19:29.9816618Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9817405Z (dda,vamp_stuff)=>    DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)
2023-07-28T02:19:29.9818521Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9819270Z (dda,vamp_stuff)=>    DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)
2023-07-28T02:19:29.9819887Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9820586Z (dda,vamp_stuff)=>    DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)
2023-07-28T02:19:29.9821156Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9821936Z (dda,vamp_stuff)=>    game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)
2023-07-28T02:19:29.9822585Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9823035Z (dda,vamp_stuff)=>    game::load_world_modfiles(loading_ui&)
2023-07-28T02:19:29.9823437Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9823760Z (dda,vamp_stuff)=>    main
2023-07-28T02:19:29.9824106Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9824439Z (dda,vamp_stuff)=>    ??
2023-07-28T02:19:29.9824784Z (dda,vamp_stuff)=>    ??:0
2023-07-28T02:19:29.9825118Z (dda,vamp_stuff)=>    ??
2023-07-28T02:19:29.9825472Z (dda,vamp_stuff)=>    ??:0
2023-07-28T02:19:29.9825804Z (dda,vamp_stuff)=>    _start
2023-07-28T02:19:29.9826156Z (dda,vamp_stuff)=>    ??:?
2023-07-28T02:19:29.9826524Z (dda,vamp_stuff)=>Backtrace emission took 1 seconds.
2023-07-28T02:19:29.9827480Z (dda,vamp_stuff)=>(continued from above) ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_succumbvampire_warlock specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:19:29.9828647Z (dda,vamp_stuff)=>02:19:17.685 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_succumbvampire_conjurer specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:19:29.9829985Z (dda,vamp_stuff)=>02:19:20.027 INFO : src/mod_tracker.h:68: Tried check if 'FakeSpecial_s_gas' had a duplicate, but type 'overmap_special' does not track object sources
2023-07-28T02:19:29.9830601Z (dda,vamp_stuff)=>02:19:29.715 INFO : Game data loaded, running Catch2 session:
2023-07-28T02:19:29.9831249Z (dda,vamp_stuff)=>[1;33mFilters: ~*
2023-07-28T02:19:29.9831698Z (dda,vamp_stuff)=>[0mNo test cases matched '~*'
2023-07-28T02:19:29.9832266Z (dda,vamp_stuff)=>[1;33m===============================================================================[0m
2023-07-28T02:19:29.9832708Z (dda,vamp_stuff)=>[1;33mNo tests ran
2023-07-28T02:19:29.9833058Z (dda,vamp_stuff)=>[0m
2023-07-28T02:19:29.9833344Z (dda,vamp_stuff)=>
2023-07-28T02:19:29.9833715Z (dda,vamp_stuff)=>02:19:29.717 INFO : Finished in 0.00161783 seconds
2023-07-28T02:19:29.9834160Z (dda,vamp_stuff)=>02:19:29.717 INFO : Randomness seeded to: 1690510754
2023-07-28T02:19:29.9834486Z (dda,vamp_stuff)=>
2023-07-28T02:19:29.9834950Z (dda,vamp_stuff)=>02:19:29.717 INFO : Treating result as failure due to error logged during initialization.
