2023-07-28T02:23:06.4037597Z (dda,secronom,secronom_lore_expansion)=>
2023-07-28T02:23:06.4038653Z (dda,secronom,secronom_lore_expansion)=>02:23:04.227 INFO : Randomness seeded to: 1690510984
2023-07-28T02:23:06.4039764Z (dda,secronom,secronom_lore_expansion)=>02:23:04.228 WARNING : opendir [lang/mo/] failed with "No such file or directory".
2023-07-28T02:23:06.4040880Z (dda,secronom,secronom_lore_expansion)=>02:23:04.230 INFO : SDL render devices: software, opengl, opengles2
2023-07-28T02:23:06.4042380Z (dda,secronom,secronom_lore_expansion)=>02:23:04.230 INFO : [options] C locale set to C
2023-07-28T02:23:06.4043800Z (dda,secronom,secronom_lore_expansion)=>02:23:04.230 INFO : [options] C++ locale set to C
2023-07-28T02:23:06.4044818Z (dda,secronom,secronom_lore_expansion)=>02:23:06.389 ERROR : (error message will follow backtrace)
2023-07-28T02:23:06.4046095Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(debug_write_backtrace(std::ostream&)+0x23) [0x1f6a77e]
2023-07-28T02:23:06.4047366Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DebugLog(DebugLevel, DebugClass)+0x278) [0x1f69d0c]
2023-07-28T02:23:06.4050354Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xa0) [0x1f695e6]
2023-07-28T02:23:06.4052318Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(JsonObject::error_skipped_members(std::vector<unsigned long, std::allocator<unsigned long> > const&) const+0x2bc) [0x209e8d4]
2023-07-28T02:23:06.4053789Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(JsonObject::report_unvisited() const+0x32c) [0x209e5c6]
2023-07-28T02:23:06.4055008Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(JsonObject::~JsonObject()+0x3d) [0x1725eb3]
2023-07-28T02:23:06.4059187Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(Item_factory::set_use_methods_from_json(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, use_function, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, use_function> > >&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >&)+0x5e9) [0x22cccd5]
2023-07-28T02:23:06.4062915Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(Item_factory::load_basic_info(JsonObject const&, itype&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x2a73) [0x22c0241]
2023-07-28T02:23:06.4064830Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(Item_factory::load_tool(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x5f) [0x22c62eb]
2023-07-28T02:23:06.4066856Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)+0xae) [0x21c417c]
2023-07-28T02:23:06.4069112Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)+0xdf) [0x21c4de1]
2023-07-28T02:23:06.4071305Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)+0x130) [0x21c4bec]
2023-07-28T02:23:06.4073582Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)+0x166) [0x20b6c94]
2023-07-28T02:23:06.4075257Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(game::load_world_modfiles(loading_ui&)+0x2f8) [0x20a4856]
2023-07-28T02:23:06.4076588Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(main+0xf9b) [0x1b318fa]
2023-07-28T02:23:06.8039545Z (dda,secronom,secronom_lore_expansion)=>    /lib/x86_64-linux-gnu/libc.so.6(+0x29d90) [0x7f5ae5c59d90]
2023-07-28T02:23:06.8040815Z (dda,secronom,secronom_lore_expansion)=>    /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0x80) [0x7f5ae5c59e40]
2023-07-28T02:23:06.8041966Z (dda,secronom,secronom_lore_expansion)=>    ./tests/cata_test(_start+0x25) [0x15017a5]
2023-07-28T02:23:06.8042962Z (dda,secronom,secronom_lore_expansion)=>
2023-07-28T02:23:06.8044125Z (dda,secronom,secronom_lore_expansion)=>    Attempting to repeat stack trace using debug symbolsâ€¦
2023-07-28T02:23:06.8044979Z (dda,secronom,secronom_lore_expansion)=>    debug_write_backtrace(std::ostream&)
2023-07-28T02:23:06.8045890Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8046607Z (dda,secronom,secronom_lore_expansion)=>    DebugLog(DebugLevel, DebugClass)
2023-07-28T02:23:06.8047553Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8048491Z (dda,secronom,secronom_lore_expansion)=>    realDebugmsg(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-28T02:23:06.8049519Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8050394Z (dda,secronom,secronom_lore_expansion)=>    JsonObject::error_skipped_members(std::vector<unsigned long, std::allocator<unsigned long> > const&) const
2023-07-28T02:23:06.8051817Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8052540Z (dda,secronom,secronom_lore_expansion)=>    JsonObject::report_unvisited() const
2023-07-28T02:23:06.8053439Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8054137Z (dda,secronom,secronom_lore_expansion)=>    JsonObject::~JsonObject()
2023-07-28T02:23:06.8055024Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8057204Z (dda,secronom,secronom_lore_expansion)=>    Item_factory::set_use_methods_from_json(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, use_function, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, use_function> > >&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >&)
2023-07-28T02:23:06.8059034Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8059989Z (dda,secronom,secronom_lore_expansion)=>    Item_factory::load_basic_info(JsonObject const&, itype&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-28T02:23:06.8061033Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8061931Z (dda,secronom,secronom_lore_expansion)=>    Item_factory::load_tool(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
2023-07-28T02:23:06.8062955Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8063992Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_object(JsonObject const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cata_path const&, cata_path const&)
2023-07-28T02:23:06.8065084Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8066127Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_all_from_json(JsonValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&, cata_path const&, cata_path const&)
2023-07-28T02:23:06.8067438Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8068422Z (dda,secronom,secronom_lore_expansion)=>    DynamicDataLoader::load_data_from_path(cata_path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, loading_ui&)
2023-07-28T02:23:06.8069501Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8070579Z (dda,secronom,secronom_lore_expansion)=>    game::load_packs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<string_id<MOD_INFORMATION>, std::allocator<string_id<MOD_INFORMATION> > > const&, loading_ui&)
2023-07-28T02:23:06.8072119Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8072671Z (dda,secronom,secronom_lore_expansion)=>    game::load_world_modfiles(loading_ui&)
2023-07-28T02:23:06.8073175Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8073627Z (dda,secronom,secronom_lore_expansion)=>    main
2023-07-28T02:23:06.8074086Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8074518Z (dda,secronom,secronom_lore_expansion)=>    ??
2023-07-28T02:23:06.8325644Z (dda,secronom,secronom_lore_expansion)=>    ??:0
2023-07-28T02:23:06.8326161Z (dda,secronom,secronom_lore_expansion)=>    ??
2023-07-28T02:23:06.8326644Z (dda,secronom,secronom_lore_expansion)=>    ??:0
2023-07-28T02:23:06.8327539Z (dda,secronom,secronom_lore_expansion)=>    _start
2023-07-28T02:23:06.8328397Z (dda,secronom,secronom_lore_expansion)=>    ??:?
2023-07-28T02:23:06.8328872Z (dda,secronom,secronom_lore_expansion)=>Backtrace emission took 0 seconds.
2023-07-28T02:23:06.8330125Z (dda,secronom,secronom_lore_expansion)=>(continued from above) ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8369122Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-28T02:23:06.8381295Z (dda,secronom,secronom_lore_expansion)=>02:23:06.830 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8383806Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-28T02:23:06.8386763Z (dda,secronom,secronom_lore_expansion)=>02:23:06.830 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8389487Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-28T02:23:06.8391060Z (dda,secronom,secronom_lore_expansion)=>02:23:06.831 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8393775Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-28T02:23:06.8395644Z (dda,secronom,secronom_lore_expansion)=>02:23:06.831 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8397822Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-28T02:23:06.8399330Z (dda,secronom,secronom_lore_expansion)=>02:23:06.832 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8402320Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-28T02:23:06.8404136Z (dda,secronom,secronom_lore_expansion)=>02:23:06.832 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8406327Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-28T02:23:06.8408132Z (dda,secronom,secronom_lore_expansion)=>02:23:06.833 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8410252Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-28T02:23:06.8411776Z (dda,secronom,secronom_lore_expansion)=>02:23:06.833 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8413862Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-28T02:23:06.8415347Z (dda,secronom,secronom_lore_expansion)=>02:23:06.837 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8417568Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-28T02:23:06.8419138Z (dda,secronom,secronom_lore_expansion)=>02:23:06.837 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8421215Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-28T02:23:06.8422914Z (dda,secronom,secronom_lore_expansion)=>02:23:06.838 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.8424993Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-28T02:23:06.9347993Z (dda,secronom,secronom_lore_expansion)=>02:23:06.838 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.9352674Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "no_deactivate_msg" in JSON data[0m
2023-07-28T02:23:06.9356408Z (dda,secronom,secronom_lore_expansion)=>02:23:06.839 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.9360253Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_msg" in JSON data[0m
2023-07-28T02:23:06.9363846Z (dda,secronom,secronom_lore_expansion)=>02:23:06.839 ERROR : src/flexbuffer_json.cpp:341 [void JsonObject::error_skipped_members(const std::vector<size_t> &) const] (json-error)
2023-07-28T02:23:06.9367589Z ##[error](dda,secronom,secronom_lore_expansion)=>[0m[0;36mInvalid or misplaced field name "sound_volume" in JSON data[0m
2023-07-28T02:23:06.9370289Z (dda,secronom,secronom_lore_expansion)=>02:23:06.896 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_flesh_initial specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:06.9372392Z (dda,secronom,secronom_lore_expansion)=>02:23:06.897 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_veinstalk_initial specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:06.9374459Z (dda,secronom,secronom_lore_expansion)=>02:23:06.899 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler specifies more than one attack of (sub)type leap, ignoring all but the last
2023-07-28T02:23:06.9376551Z (dda,secronom,secronom_lore_expansion)=>02:23:06.900 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler_brute specifies more than one attack of (sub)type leap, ignoring all but the last
2023-07-28T02:23:06.9378621Z (dda,secronom,secronom_lore_expansion)=>02:23:06.900 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_insect_saddler_scout specifies more than one attack of (sub)type leap, ignoring all but the last
2023-07-28T02:23:06.9380677Z (dda,secronom,secronom_lore_expansion)=>02:23:06.910 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_weak specifies more than one attack of (sub)type gun, ignoring all but the last
2023-07-28T02:23:06.9383009Z (dda,secronom,secronom_lore_expansion)=>02:23:06.910 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_mode specifies more than one attack of (sub)type gun, ignoring all but the last
2023-07-28T02:23:06.9385044Z (dda,secronom,secronom_lore_expansion)=>02:23:06.910 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_stro specifies more than one attack of (sub)type gun, ignoring all but the last
2023-07-28T02:23:20.2624761Z (dda,secronom,secronom_lore_expansion)=>02:23:06.910 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_zombie_fleshknot_vstro specifies more than one attack of (sub)type gun, ignoring all but the last
2023-07-28T02:23:20.2626214Z (dda,secronom,secronom_lore_expansion)=>02:23:06.934 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_centipede_mom specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2627444Z (dda,secronom,secronom_lore_expansion)=>02:23:06.935 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_spider_cellar_mega specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2628639Z (dda,secronom,secronom_lore_expansion)=>02:23:06.949 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_wretch specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2630271Z (dda,secronom,secronom_lore_expansion)=>02:23:06.952 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_boomer_glutton specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2631477Z (dda,secronom,secronom_lore_expansion)=>02:23:06.952 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_boomer_claymore specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2632681Z (dda,secronom,secronom_lore_expansion)=>02:23:06.953 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_phase_skulker specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2633880Z (dda,secronom,secronom_lore_expansion)=>02:23:06.953 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_phase_shrike specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2635051Z (dda,secronom,secronom_lore_expansion)=>02:23:06.957 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_frog_mother specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2636228Z (dda,secronom,secronom_lore_expansion)=>02:23:06.959 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_crawler_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2637386Z (dda,secronom,secronom_lore_expansion)=>02:23:06.959 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2638550Z (dda,secronom,secronom_lore_expansion)=>02:23:06.960 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_hulk_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2639899Z (dda,secronom,secronom_lore_expansion)=>02:23:06.960 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_zombie_pupa_shady specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2641334Z (dda,secronom,secronom_lore_expansion)=>02:23:09.510 INFO : src/mod_tracker.h:68: Tried check if 'FakeSpecial_s_gas' had a duplicate, but type 'overmap_special' does not track object sources
2023-07-28T02:23:20.2642403Z (dda,secronom,secronom_lore_expansion)=>02:23:13.022 ERROR : src/monstergenerator.cpp:1390 [void mtype::add_special_attack(const JsonObject &, const std::string &)] mon_sflesh_brute_pupa specifies more than one attack of (sub)type spell, ignoring all but the last
2023-07-28T02:23:20.2643505Z (dda,secronom,secronom_lore_expansion)=>02:23:20.260 INFO : Game data loaded, running Catch2 session:
2023-07-28T02:23:20.2644130Z (dda,secronom,secronom_lore_expansion)=>[1;33mFilters: ~*
2023-07-28T02:23:20.2644709Z (dda,secronom,secronom_lore_expansion)=>[0mNo test cases matched '~*'
2023-07-28T02:23:20.5613068Z (dda,secronom,secronom_lore_expansion)=>[1;33m===============================================================================[0m
2023-07-28T02:23:20.5613720Z (dda,secronom,secronom_lore_expansion)=>[1;33mNo tests ran
2023-07-28T02:23:20.5614315Z (dda,secronom,secronom_lore_expansion)=>[0m
2023-07-28T02:23:20.5614776Z (dda,secronom,secronom_lore_expansion)=>
2023-07-28T02:23:20.5615284Z (dda,secronom,secronom_lore_expansion)=>02:23:20.262 INFO : Finished in 0.00150843 seconds
2023-07-28T02:23:20.5616270Z (dda,secronom,secronom_lore_expansion)=>02:23:20.262 INFO : Randomness seeded to: 1690510984
2023-07-28T02:23:20.5616723Z (dda,secronom,secronom_lore_expansion)=>
2023-07-28T02:23:20.5617291Z (dda,secronom,secronom_lore_expansion)=>02:23:20.262 INFO : Treating result as failure due to error logged during initialization.
